intro_text:

outro_text:

articles:
    - title: "A disciplined approach to neural network hyper-parameters: Part 1 -- learning rate, batch size, momentum, and weight decay
      "
      url: "https://arxiv.org/pdf/1803.09820.pdf"
      type: "paper"
      category: "optim"
      lab: "US Naval Research Laboratory"
      description: ""
      quote: "This report proposes several efficient ways to set the hyper-parameters that significantly reduce training time and improves performance. Specifically, this report shows how to examine the training validation/test loss function for subtle clues of underfitting and overfitting and suggests guidelines for moving toward the optimal balance point. Then it discusses how to increase/decrease the learning rate/momentum to speed up training."
      recommended: false

    - title: "Accelerating Deep Neuroevolution: Train Atari in Hours on a Single Personal Computer"
      url: "https://eng.uber.com/accelerated-neuroevolution/"
      type: "blog"
      category: "rl"
      lab: "Uber"
      description: "When Uber did its research on Deep Neuroevolution, researchers needed monstruous machines of around 720 CPU cores. In this blog post, they show how they managed to reduce this number of cores to about 48, enabling more people to use and apply Deep Neuroevolution algorithms. In the original implementation, a lot of time was wasted alternating between GPU processing time (for forward/backward pass) and CPU processing time (for rendering the physics engine). The speedup therefore consists in making the CPU and GPU work simultaneously. They also managed to process minibatches through the GPU, which is not so obvious to do with Deep Neuroevolution. I also liked how by recoding some Python operations as Tensorflow operations they obtained significant speedups. This demonstrates again the versatility of Tensorflow."
      quote: ""
      recommended: ""

    - title: "Zero-Shot Visual Imitation"
      url: "https://pathak22.github.io/zeroshot-imitation/"
      type: "paper + blog"
      category: "rl"
      lab: "University of California, Berkeley"
      description: ""
      quote: "The current dominant paradigm of imitation learning relies on strong supervision of expert actions for learning both what to and how to imitate. We propose an alternative paradigm wherein an agent first explores the world without any expert supervision and then distills its own experience into a goal-conditioned skill policy using a novel forward consistency loss formulation."
      recommended: ""

    - title: "Keras' inspired model.summary() with Pytorch"
      url: "https://github.com/sksq96/pytorch-summary"
      type: ""
      category: "github"
      lab: "sksq96"
      description: "Keras provides a handy model.summary() method that prints the architecture of your network, the shape at each layers and the number of parameters it has. It can be useful to have this as a sanity check; for instance to check that all the layers are connected within the network, or to verify the shapes of feature maps. Well, this project offers a Python package that does exactly what model.summary() does, the difference being that you can use it with Pytorch. "
      quote: ""
      recommended: ""

    - title: "Image Inpainting for Irregular Holes Using Partial Convolutions"
      url: "https://arxiv.org/abs/1804.07723"
      type: "paper"
      category: "cv"
      lab: "NVIDIA"
      description: ""
      quote: "We propose the use of partial convolutions, where the convolution is masked and renormalized to be conditioned on only valid pixels. We further include a mechanism to automatically generate an updated mask for the next layer as part of the forward pass. Our model outperforms other methods for irregular masks."
      recommended: ""

    - title: "Revisiting Small Batch Training for Deep Neural Networks"
      url: "https://arxiv.org/abs/1804.07612"
      type: "paper"
      category: "optim"
      lab: "Graphcore Research"
      description: "I feel like we're going back and forth on this..."
      quote: "The collected experimental results for the CIFAR-10, CIFAR-100 and ImageNet datasets show that increasing the mini-batch size progressively reduces the range of learning rates that provide stable convergence and acceptable test performance. On the other hand, small mini-batch sizes provide more up-to-date gradient calculations, which yields more stable and reliable training. The best performance has been consistently obtained for mini-batch sizes between m=2 and m=32, which contrasts with recent work advocating the use of mini-batch sizes in the thousands."
      recommended: ""

    - title: "Feeback Networks"
      url: "http://feedbacknet.stanford.edu/"
      type: "blog + paper"
      category: "cv"
      lab: "Standford University"
      description: "In traditional deep learning architectures, the prediction of the model is obtained after a single forward pass. In this paper (CVPR 2017), authors propose to obtain the prediction after several passes. The first pass will be a 'rough' prediction of the model. The second pass will be a refined prediction, based on the first pass. And so on, until the last pass which will be the ultimate refined prediction of the model. The webpage provides a Youtube video of about 5 minutes long. It does a great job at summarising the method and the results obtained in the paper."
      quote: ""
      recommended: ""

    - title: "Generating image segmentation datasets with Unreal Engine 4"
      url: "https://medium.com/@jeff_97181/generating-image-segmentation-datasets-with-unreal-engine-4-2b5b9f75da34"
      type: "medium"
      category: "cv"
      lab: "Jeff Grenier"
      description: "Imagine the wonders of being able to synthetise an infinite amount of data... Well, we could leverage existing physics engine to do this. That is exactly what is tackled in this very interesting blog post. It is not a tutorial on how to generate data with Unreal Engine 4, but rather a story of the different steps the author went through. He shares code, resources and training materials he used to generate landscapes in the engine. I think it would make a fine starting point if you wanted to get started in this sort of project."
      quote: ""
      recommended: ""

    - title: "Measuring the Intrinsic Dimension of Objective Landscapes"
      url: "https://www.youtube.com/watch?v=uSZWeRADTFI"
      type: "paper + youtube"
      category: "optim"
      lab: "Uber AI Labs"
      description: "Two researchers are in front of a white board and explain their paper. It could sound boring but they actually made it very interesting and even entertaining. It's maybe not as slick as the OpenAI webpages, but it certaintly catches the attention! Their finding is quite intriguing as well. Instead of optimizing a network by searchinig in the whole parameter space, they limit the search to a sub-space. For instance, they will train a network by searching solutions on a line. They'll train another one by searching solutions within a plane. Then another network with solutions in a 3d space, etc. Likely, those networks won't really learn anything. But they observe that there is a critical dimension in which a good minima can be obtained. They call this the 'Intrinsic Dimension'. As an example, they trained a small CNN on MNIST and found that its intrinsic dimension was only 290! From there, they make other interesting observations."
      quote: ""
      recommended: "true"

    - title: "Pytorch 0.4.0 is out"
      url: "https://github.com/pytorch/pytorch/releases/tag/v0.4.0"
      type: "github"
      category: ""
      lab: ""
      description: "Pytorch keeps getting more amazing... Oh, that sounded biased... Well, nobody will be surprised... The changes are somewhat important and could potentially break existing code. Some time will be required to update the code. Variables objects and Tensors objects are now the same thing. As a result, using something like 'x.data' is useless. Other thing: scalars are now possible (before they had to be a vector of length 1). 'torch.FloatTensor', 'torch.LongTensor', 'torch.DoubleTensor' are deprecated and a Numpy-style notation is now available (torch.float32)."
      quote: ""
      recommended: ""


    - title: "Training with large minibatches is bad for your health"
      url: "https://twitter.com/ylecun/status/989610208497360896"
      type: "tweet"
      category: "laugh"
      lab: ""
      description: ""
      quote: ""
      recommended: ""

    - title: "Progressive Neural Networks for Image Classification"
      url: "https://arxiv.org/abs/1804.09803"
      type: "paper"
      category: "cv"
      lab: "University of Missouri-Columbia, Department of Computer Science, Beijing Jiaotong University"
      description: ""
      quote: "In this work, we develop a multi-stage progressive structure with integrated confidence analysis and decision policy learning for deep neural networks. This new framework consists of a set of network units to be activated in a sequential manner with progressively increased complexity and visual recognition power. "
      recommended: ""

    - title: "Deep Keyframe Detection in Human Action Videos"
      url: "https://arxiv.org/abs/1804.10021"
      type: "paper"
      category: "cv"
      lab: "Xidian University, University of Western Australia,  Hunan University"
      description: ""
      quote: "Detecting representative frames in videos based on human actions is quite challenging because of the combined factors of human pose in action and the background. This paper addresses this problem and formulates the key frame detection as one of finding the video frames that optimally maximally contribute to differentiating the underlying action category from all other categories. [...] We specify a new ConvNet framework, consisting of a summarizer and discriminator. The summarizer is a two-stream ConvNet aimed at, first, capturing the appearance and motion features of video frames, and then encoding the obtained appearance and motion features for video representation. The discriminator is a fitting function aimed at distinguishing between the key frames and others in the video. "
      recommended: ""

    - title: "Near-Lossless Deep Feature Compression for Collaborative Intelligence"
      url: "https://arxiv.org/abs/1804.09963"
      type: "paper"
      category: "engineering"
      lab: "Simon Fraser University"
      description: ""
      quote: "Collaborative intelligence is a new paradigm for efficient deployment of deep neural networks across the mobile-cloud infrastructure. By dividing the network between the mobile and the cloud, it is possible to distribute the computational workload such that the overall energy and/or latency of the system is minimized. However, this necessitates sending deep feature data from the mobile to the cloud in order to perform inference. In this work, we examine the differences between the deep feature data and natural image data, and propose a simple and effective near-lossless deep feature compressor."
      recommended: ""
